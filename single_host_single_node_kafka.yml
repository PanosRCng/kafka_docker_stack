services:

  zookeeper1:
    user: "${USER_ID}:${GROUP_ID}"
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper1
    container_name: kafka_stack_zookeeper1
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER1_CLIENT_PORT}
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888
    volumes:
      - zookeeper1_data:/var/lib/zookeeper/data
      - zookeeper1_log:/var/lib/zookeeper/log
    networks:
      - kafka_net
    ports:
      - ${ZOOKEEPER1_CLIENT_PORT}:${ZOOKEEPER1_CLIENT_PORT}

  kafka1:
    user: "${USER_ID}:${GROUP_ID}"
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka_stack_kafka1
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:${KAFKA1_INTERNAL_PORT},EXTERNAL://${NETWORK_GATEWAY}:${KAFKA1_EXTERNAL_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:${ZOOKEEPER1_CLIENT_PORT}
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: ${KAFKA_JMX_PORT}
      KAFKA_JMX_HOSTNAME: kafka1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - kafka_net
    volumes:
      - kafka1:/var/lib/kafka/data
    ports:
      - ${KAFKA1_EXTERNAL_PORT}:${KAFKA1_EXTERNAL_PORT}
      - ${KAFKA_JMX_PORT}:${KAFKA_JMX_PORT}
    depends_on:
      - zookeeper1

  kafka-ui:
    user: "${USER_ID}:${GROUP_ID}"
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_stack_kafka_ui
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_CLUSTER_NAME}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:${KAFKA1_INTERNAL_PORT}
      KAFKA_CLUSTERS_0_METRICS_PORT: ${KAFKA_JMX_PORT}
    networks:
      - kafka_net
    ports:
      - ${KAFKA_UI_PORT}:8080
    depends_on:
      - kafka1



networks:

  kafka_net:
    name: kafka_stack_net
    driver: bridge
    attachable: true
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.driver.mtu: "1500"
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}



volumes:

  zookeeper1_data:
    name: kafka_stack_volume_zookeeper1_data
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ZOOKEEPER1_DATA_VOLUME_PATH}

  zookeeper1_log:
    name: kafka_stack_volume_zookeeper1_log
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ZOOKEEPER1_LOG_VOLUME_PATH}

  kafka1:
    name: kafka_stack_volume_kafka1
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${KAFKA1_VOLUME_PATH}
